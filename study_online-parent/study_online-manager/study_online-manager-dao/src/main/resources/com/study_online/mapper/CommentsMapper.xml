<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study_online.mapper.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.study_online.pojo.Comments">
    <id column="comments_id" jdbcType="VARCHAR" property="commentsId" />
    <result column="from_id" jdbcType="VARCHAR" property="fromId" />
    <result column="to_id" jdbcType="VARCHAR" property="toId" />
    <result column="father_id" jdbcType="VARCHAR" property="fatherId" />
    <result column="is_father" jdbcType="BIT" property="isFather" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.study_online.pojo.Comments">
    <result column="msg" jdbcType="LONGVARCHAR" property="msg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comments_id, from_id, to_id, father_id, is_father, time
  </sql>
  <sql id="Blob_Column_List">
    msg
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.study_online.pojo.CommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.study_online.pojo.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where comments_id = #{commentsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from comments
    where comments_id = #{commentsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.study_online.pojo.CommentsExample">
    delete from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.study_online.pojo.Comments">
    insert into comments (comments_id, from_id, to_id, 
      father_id, is_father, time, 
      msg)
    values (#{commentsId,jdbcType=VARCHAR}, #{fromId,jdbcType=VARCHAR}, #{toId,jdbcType=VARCHAR}, 
      #{fatherId,jdbcType=VARCHAR}, #{isFather,jdbcType=BIT}, #{time,jdbcType=TIMESTAMP}, 
      #{msg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.study_online.pojo.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentsId != null">
        comments_id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="fatherId != null">
        father_id,
      </if>
      <if test="isFather != null">
        is_father,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="msg != null">
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentsId != null">
        #{commentsId,jdbcType=VARCHAR},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="fatherId != null">
        #{fatherId,jdbcType=VARCHAR},
      </if>
      <if test="isFather != null">
        #{isFather,jdbcType=BIT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.study_online.pojo.CommentsExample" resultType="java.lang.Long">
    select count(*) from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comments
    <set>
      <if test="record.commentsId != null">
        comments_id = #{record.commentsId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromId != null">
        from_id = #{record.fromId,jdbcType=VARCHAR},
      </if>
      <if test="record.toId != null">
        to_id = #{record.toId,jdbcType=VARCHAR},
      </if>
      <if test="record.fatherId != null">
        father_id = #{record.fatherId,jdbcType=VARCHAR},
      </if>
      <if test="record.isFather != null">
        is_father = #{record.isFather,jdbcType=BIT},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update comments
    set comments_id = #{record.commentsId,jdbcType=VARCHAR},
      from_id = #{record.fromId,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      father_id = #{record.fatherId,jdbcType=VARCHAR},
      is_father = #{record.isFather,jdbcType=BIT},
      time = #{record.time,jdbcType=TIMESTAMP},
      msg = #{record.msg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comments
    set comments_id = #{record.commentsId,jdbcType=VARCHAR},
      from_id = #{record.fromId,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      father_id = #{record.fatherId,jdbcType=VARCHAR},
      is_father = #{record.isFather,jdbcType=BIT},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study_online.pojo.Comments">
    update comments
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=VARCHAR},
      </if>
      <if test="fatherId != null">
        father_id = #{fatherId,jdbcType=VARCHAR},
      </if>
      <if test="isFather != null">
        is_father = #{isFather,jdbcType=BIT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comments_id = #{commentsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.study_online.pojo.Comments">
    update comments
    set from_id = #{fromId,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      father_id = #{fatherId,jdbcType=VARCHAR},
      is_father = #{isFather,jdbcType=BIT},
      time = #{time,jdbcType=TIMESTAMP},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where comments_id = #{commentsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study_online.pojo.Comments">
    update comments
    set from_id = #{fromId,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      father_id = #{fatherId,jdbcType=VARCHAR},
      is_father = #{isFather,jdbcType=BIT},
      time = #{time,jdbcType=TIMESTAMP}
    where comments_id = #{commentsId,jdbcType=VARCHAR}
  </update>
</mapper>